{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2011440971","IndexPage","_React$useState","React","useState","names","setNames","useEffect","asyncToGenerator_default","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","results","map","r","name","stop","layout","seo","title","keywords","style","maxWidth","marginBottom","components_image","Fragment","n","renderNames","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","background","margin","padding","color","textDecoration","Layout","header","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-6f50bfbf4bf6d6c041b4.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport axios from \"axios\"\n\nconst renderNames = names => (\n  <>\n    {names.map(n => (\n      <div>n</div>\n    ))}\n  </>\n)\nconst IndexPage = () => {\n  const [names, setNames] = React.useState([])\n  React.useEffect(async () => {\n    const res = await axios.get(\"https://swapi.co/api/people\")\n    const names = res.data.results.map(r => r.name)\n    setNames(names)\n  }, [])\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n      <h1>Hi people</h1>\n      <p>Welcome to your new Gatsby site.</p>\n      <p>Now go build something great.</p>\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n      {renderNames(names)}\n      <Link to=\"/page-2/\">Go to page 2</Link>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}